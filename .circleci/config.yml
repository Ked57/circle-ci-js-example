version: 2 
jobs: 
  install-dependencies:  
    docker: 
      - image: circleci/node:10 
    steps:
      - checkout 
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "package-lock.json" }}
            - dependency-cache-
      - run:
          name: Download dependencies
          command: npm ci
      - save_cache:
          paths:
            - node_modules
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - persist_to_workspace:
          root: ./
          paths:
            - node_modules
  lint:  
    docker: 
      - image: circleci/node:10 
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: lint
          command: npm run lint
  format-check:  
    docker: 
      - image: circleci/node:10 
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: format:check
          command: npm run format:check
  test:  
    docker: 
      - image: circleci/node:10 
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: test
          command: npm run test
  zip-to-artifactory:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: zip workspace
          command: zip -r build.zip *
      - run:
          name: send to artifactory
          command: curl -X PUT "https://artifactory.benjamin-tourman.fr/artifactory/example-repo-local/circle-ci-js-example/build.zip" -T build.zip
  deploy:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - add_ssh_keys:
          fingerprints:
            - $SRV_FINGERPRINT
      - run:
          name: fix host authenticity for production server
          command: ssh-keyscan $SRV_HOST >> ~/.ssh/known_hosts
      - run:
          name: debug
          command: cd ~/.ssh/known_hosts && ls -l
      - run:
          name: send to server
          command: scp build.zip $SRV_USER@$SRV_HOST:circle-ci-js-example
      - run:
          name: run
          command: ssh $SRV_USER@$SRV_HOST:circle-ci-js-example && unzip build.zip -d build && cd build && npm start

workflows:
  version: 2

  js-example-workflow:
    jobs:
      - install-dependencies:
          filters:
            branches:
              only: /.*/
      - format-check:
          requires:
            - install-dependencies
          filters:
            branches:
              only: /.*/
      - lint:
          requires:
            - install-dependencies
          filters:
            branches:
              only: /.*/
      - test:
          requires:
            - format-check
            - lint
          filters:
            branches:
              only: /.*/
      - zip-to-artifactory:
          requires:
            - test
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - zip-to-artifactory
          filters:
            branches:
              only: master